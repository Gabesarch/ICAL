Dialogue Instruction:
<Driver> how can I help?
<Commander> hey can you make me a salad please? I need 2 slices of tomatoes first
<Commander> there's a knife on the island behind you
<Driver> sure
<Commander> and a tomato next to the fridge on the counter
<Driver> tomato was sliced, what's next?
<Commander> that you! Can you cook a slice of a potato for me now
<Driver> sure
<Driver> where's the potato?
<Commander> in the drawer under the toaster
<Commander> check the fridge if it's not in the drawer, i saw you checked the one it should have been in
<Driver> okay, I'll check the fridge
<Commander> thank you
<Driver> only one slice?
<Commander> if you could then put the slices of potato and tomato on plate for me please
<Commander> yes thanks just the 1 slice
<Driver> sure
<Commander> thank you
<Driver> done

Initial Object State:
"Tomato_1": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Potato_10": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop", "Microwave"]}
"Tomato_13": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Potato_17": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Drawer_18": {"label": "Drawer", "open": False}
"Drawer_19": {"label": "Drawer", "open": False}
"Drawer_20": {"label": "Drawer", "open": False}
"Drawer_22": {"label": "Drawer", "open": False}
"Cabinet_23": {"label": "Cabinet", "open": False}
"Cabinet_24": {"label": "Cabinet", "open": False}
"Drawer_25": {"label": "Drawer", "open": False}
"Drawer_26": {"label": "Drawer", "open": False}
"Drawer_28": {"label": "Drawer", "open": False}
"Drawer_29": {"label": "Drawer", "open": False}
"Cabinet_30": {"label": "Cabinet", "open": False}
"CounterTop_31": {"label": "CounterTop"}
"CounterTop_32": {"label": "CounterTop"}
"Drawer_33": {"label": "Drawer", "open": False}
"Drawer_35": {"label": "Drawer", "open": False}
"Drawer_36": {"label": "Drawer", "open": False}
"Drawer_37": {"label": "Drawer", "open": False}
"Drawer_38": {"label": "Drawer", "open": False}
"Drawer_39": {"label": "Drawer", "open": False}
"Drawer_40": {"label": "Drawer", "open": False}
"Cabinet_41": {"label": "Cabinet", "open": False}
"Drawer_42": {"label": "Drawer", "open": False}
"Cabinet_43": {"label": "Cabinet", "open": False}
"Cabinet_44": {"label": "Cabinet", "open": False}
"Cabinet_45": {"label": "Cabinet", "open": False}
"Cabinet_46": {"label": "Cabinet", "open": False}
"Cabinet_47": {"label": "Cabinet", "open": False}
"Cabinet_48": {"label": "Cabinet", "open": False}
"Cabinet_49": {"label": "Cabinet", "open": False}
"Cabinet_50": {"label": "Cabinet", "open": False}
"Cabinet_51": {"label": "Cabinet", "open": False}
"Drawer_52": {"label": "Drawer", "open": False}
"CounterTop_53": {"label": "CounterTop"}
"Drawer_54": {"label": "Drawer", "open": False}
"Drawer_55": {"label": "Drawer", "open": False}
"Drawer_56": {"label": "Drawer", "open": False}
"Drawer_57": {"label": "Drawer", "open": False}
"Drawer_58": {"label": "Drawer", "open": False}
"Drawer_59": {"label": "Drawer", "open": False}
"Drawer_61": {"label": "Drawer", "open": False}
"CounterTop_62": {"label": "CounterTop"}
"Drawer_63": {"label": "Drawer", "open": False}
"Drawer_64": {"label": "Drawer", "open": False}
"Drawer_65": {"label": "Drawer", "open": False}
"Plate_66": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["CounterTop"]}
"Potato_69": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Drawer"]}
"Pot_78": {"label": "Pot", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["CounterTop"]}
"Knife_82": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"SinkBasin_87": {"label": "SinkBasin"}
"Fridge_91": {"label": "Fridge", "open": False}
"Knife_92": {"label": "Knife", "holding": False, "supported_by": ["CounterTop", "Microwave"]}
"Tomato_99": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop", "Plate"]}
"Spoon_100": {"label": "Spoon", "holding": False, "dirty": False, "supported_by": ["Sink"]}
"Mug_103": {"label": "Mug", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["CounterTop", "Plate"]}
"Faucet_104": {"label": "Faucet", "toggled": True}

Demonstration Script:
```python
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.go_to()
target_tomato.slice()
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_countertop.go_to()
target_knife.place(target_countertop)
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.close()
target_drawer = InteractionObject("Drawer", object_instance = "Drawer")
target_drawer.go_to()
target_drawer.open()
target_drawer.go_to()
target_drawer.close()
target_drawer.go_to()
target_drawer.close()
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_potato = InteractionObject("Potato", object_instance = "Potato")
target_potato.go_to()
target_potato.pickup()
target_fridge.go_to()
target_fridge.close()
target_countertop.go_to()
target_potato.place(target_countertop)
target_knife.go_to()
target_knife.pickup()
target_potato.go_to()
target_potato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_potatosliced = InteractionObject("PotatoSliced", object_instance = None, parent_object = "Potato") # Initialize new sliced object from sliced parent
target_potatosliced.pickup_and_place(target_countertop)
target_mug = InteractionObject("Mug", object_instance = "Mug")
target_mug.pickup()
target_countertop.go_to()
target_mug.place(target_countertop)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = None, parent_object = "Tomato") # Initialize new sliced object from sliced parent
target_tomatosliced.go_to()
target_tomatosliced.pickup()
target_tomatosliced.pickup_and_place(target_countertop)
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.toggle_off()
target_pot = InteractionObject("Pot", object_instance = "Pot")
target_pot.go_to()
target_pot.toggle_off()
target_faucet.go_to()
target_faucet.toggle_off()
target_faucet.go_to()
target_faucet.toggle_off()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup_and_place(target_countertop)
target_faucet.toggle_off()
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_plate.pickup_and_place(target_sinkbasin)
target_plate.pickup()
target_sinkbasin.go_to()
target_plate.place(target_sinkbasin)
target_spoon = InteractionObject("Spoon", object_instance = "Spoon")
target_spoon.pickup_and_place(target_countertop)
target_spoon.place(target_countertop)
target_plate.pickup_and_place(target_sinkbasin)
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate.pickup_and_place(target_countertop)
target_tomatosliced.pickup()
target_countertop.go_to()
target_tomatosliced.place(target_countertop)
target_tomatosliced.pickup_and_place(target_countertop)
target_tomatosliced.place(target_countertop)
```