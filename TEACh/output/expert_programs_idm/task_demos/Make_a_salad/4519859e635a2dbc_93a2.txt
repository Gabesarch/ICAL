Dialogue Instruction:
<Commander> we need to make a salad please
<Driver> what can i do for you
<Commander> lettuce, tomato and potato
<Commander> lettuce and tomato are by the stove
<Commander> potato is on the stool
<Commander> cook that first please
<Commander> pick up the potato, on the stool
<Commander> take to microwave
<Commander> and cook please
<Commander> it's above the sink
<Commander> get the knife from the fridge please
<Commander> slice the potato, lettuce and tomato
<Commander> pick up the potato from the microwave
<Commander> slice the lettuce, potato and tomato
<Driver> then?
<Commander> that is an apple
<Driver> where is the lettuce?
<Commander> slice the lettuce and tomato
<Commander> on your left
<Commander> it's much easier to walk the knife over there
<Commander> instead of moving everything around
<Driver> then?
<Driver> then?
<Commander> slice the tomato
<Commander> open the cabinet to the right of the microwave
<Driver> next
<Commander> retrieve the plate from there
<Commander> then put 1 lettuce, 2 tomato and 1 potato on the plate
<Commander> you don't need the apple
<Commander> are you there?
<Driver> yes
<Commander> you are just standing there with an apple for minutes
<Commander> put it any where
<Commander> we don't need apple on the plate
<Driver> done
<Commander> 2 tomato slices
<Driver> done

Initial Object State:
"Plate_2": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["Cabinet"]}
"Potato_3": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Drawer"]}
"Apple_4": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["CounterTop"]}
"Lettuce_9": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Cabinet"]}
"Lettuce_12": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["CounterTop"]}
"Apple_13": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["StoveBurner", "Pan"]}
"CounterTop_14": {"label": "CounterTop"}
"CounterTop_19": {"label": "CounterTop"}
"Cabinet_20": {"label": "Cabinet", "open": False}
"Cabinet_21": {"label": "Cabinet", "open": False}
"Cabinet_22": {"label": "Cabinet", "open": False}
"Cabinet_23": {"label": "Cabinet", "open": False}
"Cabinet_24": {"label": "Cabinet", "open": False}
"Cabinet_25": {"label": "Cabinet", "open": False}
"Cabinet_26": {"label": "Cabinet", "open": False}
"Cabinet_27": {"label": "Cabinet", "open": False}
"Cabinet_28": {"label": "Cabinet", "open": False}
"Cabinet_29": {"label": "Cabinet", "open": False}
"Cabinet_30": {"label": "Cabinet", "open": False}
"Cabinet_31": {"label": "Cabinet", "open": False}
"Cabinet_32": {"label": "Cabinet", "open": False}
"Cabinet_33": {"label": "Cabinet", "open": False}
"Cabinet_34": {"label": "Cabinet", "open": False}
"Cabinet_35": {"label": "Cabinet", "open": False}
"Cabinet_36": {"label": "Cabinet", "open": False}
"CounterTop_39": {"label": "CounterTop"}
"Cabinet_40": {"label": "Cabinet", "open": False}
"Cabinet_44": {"label": "Cabinet", "open": False}
"Fridge_45": {"label": "Fridge", "open": False}
"Lettuce_46": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Cabinet"]}
"Microwave_56": {"label": "Microwave", "toggled": True, "open": False}
"Knife_63": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Apple_66": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["Cabinet", "Plate"]}
"Knife_68": {"label": "Knife", "holding": False, "supported_by": ["Drawer"]}
"Potato_69": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Stool"]}
"Plate_70": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Cabinet"]}

Demonstration Script:
```python
target_apple = InteractionObject("Apple", object_instance = "Apple")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_apple.pickup_and_place(target_countertop)
target_potato = InteractionObject("Potato", object_instance = "Potato")
target_potato.pickup()
target_countertop.go_to()
target_potato.place(target_countertop)
target_microwave = InteractionObject("Microwave", object_instance = "Microwave")
target_microwave.go_to()
target_microwave.close()
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_fridge.go_to()
target_fridge.close()
target_countertop.go_to()
target_knife.place(target_countertop)
target_microwave.go_to()
target_microwave.open()
target_potato.pickup_and_place(target_countertop)
target_knife.pickup()
target_potato.go_to()
target_potato.slice()
target_potato.go_to()
target_potato.slice()
target_potato.go_to()
target_potato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_lettuce.pickup_and_place(target_countertop)
target_knife.pickup()
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_knife.place(target_cabinet)
target_apple.pickup_and_place(target_countertop)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup()
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_cabinet.close()
target_cabinet.go_to()
target_plate.place(target_cabinet)
target_countertop.go_to()
target_plate.place(target_countertop)
target_potatosliced = InteractionObject("PotatoSliced", object_instance = None, parent_object = "Potato") # Initialize new sliced object from sliced parent
target_potatosliced.pickup_and_place(target_plate)
target_potatosliced.place(target_countertop)
target_lettucesliced = InteractionObject("LettuceSliced", object_instance = "LettuceSliced")
target_lettucesliced.pickup_and_place(target_plate)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = "TomatoSliced")
target_tomatosliced.pickup()
target_plate.go_to()
target_tomatosliced.place(target_plate)
target_tomatosliced.pickup_and_place(target_plate)
```