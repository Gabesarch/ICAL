Dialogue Instruction:
<Driver> hi
<Driver> what should I do today?
<Commander> We're making a salad and starting with slicing the tomato with a knife
<Driver> ok
<Commander> wonderful!
<Driver> i sliced tomato and lettuce
<Commander> next, slice the potato and you'll need to cook 2 slices
<Driver> can you help me find the potato?
<Commander> yes. let me search
<Commander> it is in the right hand small cabinet over the stove
<Commander> then cook the slices and put all of the components on a plate
<Commander> you won't need the lettuce on the plate. just the tomato and potato
<Driver> OK!
<Commander> yay!!!!
<Driver> thanks!!

Initial Object State:
"Knife_4": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"SaltShaker_12": {"label": "SaltShaker", "holding": False, "supported_by": ["CounterTop", "Pot"]}
"Potato_15": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Plate_18": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Fridge"]}
"Knife_19": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Tomato_20": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Sink"]}
"Knife_24": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Tomato_29": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["StoveBurner", "Pan"]}
"SaltShaker_31": {"label": "SaltShaker", "holding": False, "supported_by": ["Sink"]}
"CounterTop_52": {"label": "CounterTop"}
"CounterTop_54": {"label": "CounterTop"}
"CounterTop_56": {"label": "CounterTop"}
"CounterTop_60": {"label": "CounterTop"}
"Tomato_66": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["GarbageCan"]}
"CoffeeMachine_72": {"label": "CoffeeMachine", "toggled": False}
"Knife_73": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Plate_74": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Fridge"]}
"Potato_78": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Fridge_82": {"label": "Fridge", "open": False}
"SaltShaker_84": {"label": "SaltShaker", "holding": False, "supported_by": ["Plate", "Fridge"]}
"SinkBasin_93": {"label": "SinkBasin"}
"Knife_95": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Faucet_105": {"label": "Faucet", "toggled": True}

Demonstration Script:
```python
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.go_to()
target_faucet.toggle_off()
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.go_to()
target_tomato.slice()
target_tomato.go_to()
target_tomato.slice()
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_countertop.go_to()
target_knife.place(target_countertop)
target_knife.go_to()
target_knife.pickup()
target_saltshaker = InteractionObject("SaltShaker", object_instance = "SaltShaker")
target_saltshaker.pickup_and_place(target_countertop)
target_coffeemachine = InteractionObject("CoffeeMachine", object_instance = "CoffeeMachine")
target_saltshaker.place(target_coffeemachine)
target_potato = InteractionObject("Potato", object_instance = "Potato")
target_potato.pickup_and_place(target_countertop)
target_knife.pickup()
target_countertop.go_to()
target_knife.place(target_countertop)
target_potatosliced = InteractionObject("PotatoSliced", object_instance = "PotatoSliced")
target_potatosliced.pickup_and_place(target_countertop)
target_potatosliced.pickup()
target_potatosliced.go_to()
target_potatosliced.pickup()
target_potatosliced.go_to()
target_potatosliced.pickup()
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_saltshaker.pickup_and_place(target_fridge)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup()
target_countertop.go_to()
target_plate.place(target_countertop)
target_potatosliced.pickup_and_place(target_plate)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = None, parent_object = "Tomato") # Initialize new sliced object from sliced parent
target_tomatosliced.pickup()
target_plate.go_to()
target_tomatosliced.place(target_plate)
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_plate.pickup_and_place(target_sinkbasin)
target_potatosliced.pickup()
target_plate.go_to()
target_potatosliced.place(target_plate)
```