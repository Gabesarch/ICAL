Dialogue Instruction:
<Commander> tomato is inside the fridge
<Commander> slice it
<Commander> knife is on the white round table
<Driver> knife is where
<Driver> done
<Commander> potato is inside the basin
<Commander> cook 2 slices in microwave
<Commander> place all the 3 slices onto a plate which is inside the basin
<Commander> done, thanks!!

Initial Object State:
"Knife_3": {"label": "Knife", "holding": False, "supported_by": ["Chair"]}
"Apple_5": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["Microwave"]}
"Plate_7": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Sink"]}
"Potato_10": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Potato_13": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Sink"]}
"CounterTop_19": {"label": "CounterTop"}
"CounterTop_22": {"label": "CounterTop"}
"Cabinet_35": {"label": "Cabinet", "open": False}
"Cabinet_36": {"label": "Cabinet", "open": False}
"Cabinet_37": {"label": "Cabinet", "open": False}
"Cabinet_38": {"label": "Cabinet", "open": False}
"Cabinet_39": {"label": "Cabinet", "open": False}
"Cabinet_40": {"label": "Cabinet", "open": False}
"Cabinet_41": {"label": "Cabinet", "open": False}
"Cabinet_42": {"label": "Cabinet", "open": False}
"Cabinet_43": {"label": "Cabinet", "open": False}
"Cabinet_44": {"label": "Cabinet", "open": False}
"Cabinet_45": {"label": "Cabinet", "open": False}
"Cabinet_46": {"label": "Cabinet", "open": False}
"Cabinet_47": {"label": "Cabinet", "open": False}
"Cabinet_48": {"label": "Cabinet", "open": False}
"Cabinet_49": {"label": "Cabinet", "open": False}
"Cabinet_50": {"label": "Cabinet", "open": False}
"Cabinet_51": {"label": "Cabinet", "open": False}
"Cabinet_52": {"label": "Cabinet", "open": False}
"Cabinet_53": {"label": "Cabinet", "open": False}
"Cabinet_54": {"label": "Cabinet", "open": False}
"Cabinet_55": {"label": "Cabinet", "open": False}
"Cabinet_56": {"label": "Cabinet", "open": False}
"Cabinet_57": {"label": "Cabinet", "open": False}
"Cabinet_58": {"label": "Cabinet", "open": False}
"Cabinet_59": {"label": "Cabinet", "open": False}
"Cabinet_60": {"label": "Cabinet", "open": False}
"Cabinet_61": {"label": "Cabinet", "open": False}
"Pan_63": {"label": "Pan", "holding": False, "dirty": False, "supported_by": ["DiningTable"]}
"Knife_65": {"label": "Knife", "holding": False, "supported_by": ["DiningTable"]}
"Fridge_66": {"label": "Fridge", "open": False}
"Microwave_69": {"label": "Microwave", "toggled": True, "open": False}
"StoveKnob_71": {"label": "StoveKnob", "toggled": False}
"StoveKnob_72": {"label": "StoveKnob", "toggled": False}
"StoveKnob_73": {"label": "StoveKnob", "toggled": False}
"StoveKnob_74": {"label": "StoveKnob", "toggled": False}
"Potato_76": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Drawer"]}
"Tomato_78": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Plate_84": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["Sink"]}
"SinkBasin_91": {"label": "SinkBasin"}
"Apple_92": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["Plate", "Sink"]}
"Knife_95": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}

Demonstration Script:
```python
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.go_to()
target_tomato.pickup()
target_fridge.go_to()
target_fridge.close()
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_sinkbasin.go_to()
target_tomato.place(target_sinkbasin)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_knife.pickup_and_place(target_countertop)
target_potato = InteractionObject("Potato", object_instance = "Potato")
target_potato.pickup()
target_countertop.go_to()
target_potato.place(target_countertop)
target_knife.go_to()
target_knife.pickup()
target_potato.go_to()
target_potato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_potatosliced = InteractionObject("PotatoSliced", object_instance = None, parent_object = "Potato") # Initialize new sliced object from sliced parent
target_potatosliced.go_to()
target_potatosliced.pickup()
target_microwave = InteractionObject("Microwave", object_instance = "Microwave")
target_microwave.go_to()
target_microwave.open()
target_microwave.go_to()
target_potatosliced.place(target_microwave)
target_apple = InteractionObject("Apple", object_instance = "Apple")
target_apple.go_to()
target_apple.pickup()
target_apple.go_to()
target_apple.open()
target_countertop.go_to()
target_apple.place(target_countertop)
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.close()
target_microwave.go_to()
target_microwave.toggle_on()
target_microwave.go_to()
target_microwave.toggle_off()
target_cabinet.go_to()
target_cabinet.open()
target_microwave.go_to()
target_apple.place(target_microwave)
target_microwave.go_to()
target_microwave.close()
target_microwave.go_to()
target_microwave.toggle_off()
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = "TomatoSliced")
target_tomatosliced.pickup_and_place(target_countertop)
target_microwave.toggle_off()
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_potatosliced.pickup_and_place(target_plate)
target_potatosliced.pickup()
target_pan = InteractionObject("Pan", object_instance = "Pan")
target_pan.go_to()
target_potatosliced.place(target_pan)
target_stoveknob = InteractionObject("StoveKnob", object_instance = "StoveKnob")
target_stoveknob.go_to()
target_stoveknob.toggle_on()
target_stoveknob.go_to()
target_stoveknob.toggle_on()
target_stoveknob.go_to()
target_stoveknob.toggle_on()
target_cabinet.go_to()
target_cabinet.open()
target_potatosliced.pickup_and_place(target_countertop)
```