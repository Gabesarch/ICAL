Dialogue Instruction:
<Driver> how can I help?
<Commander> can you make a slice of toast please
<Commander> it is on the white table
<Commander> knife is also there
<Driver> sure
<Commander> a plate is on the chair by the same table, please put the toast on it
<Driver> okay
<Driver> done
<Commander> done

Initial Object State:
"Knife_4": {"label": "Knife", "holding": False, "supported_by": ["Floor", "Fridge"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Bread_9": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"Bread_15": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Knife_18": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Knife_19": {"label": "Knife", "holding": False, "supported_by": ["DiningTable"]}
"Toaster_48": {"label": "Toaster", "toggled": False}
"Bread_56": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Knife_63": {"label": "Knife", "holding": False, "supported_by": ["Drawer"]}
"Knife_67": {"label": "Knife", "holding": False, "supported_by": ["Chair"]}
"DiningTable_78": {"label": "DiningTable"}

Demonstration Script:
```python
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_bread.go_to()
target_bread.slice()
target_diningtable = InteractionObject("DiningTable", object_instance = "DiningTable")
target_diningtable.go_to()
target_knife.place(target_diningtable)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_breadsliced.pickup_and_place(target_toaster)
target_breadsliced.pickup()
target_diningtable.go_to()
target_breadsliced.place(target_diningtable)
target_diningtable.go_to()
target_breadsliced.place(target_diningtable)
```