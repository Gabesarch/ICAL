Dialogue Instruction:
<Driver> Hi. What should I do today?
<Commander> Hi
<Commander> First we need to make a slice of toast.
<Commander> The knife is on the stool behind the counter
<Commander> You can leave the bread there.
<Commander> You need to get the knife off the stool.
<Commander> Or another knife.
<Commander> That worked though :)
<Commander> Now toast the bread.
<Commander> Good
<Commander> Now you need to get the plate from the chair in the dining room
<Commander> You'll need to clean it - it's dirty.
<Commander> 
<Commander> It's on the chair in the corner.
<Commander> 
<Driver> 
<Commander> 
<Commander> Good, just rinse
<Commander> The toast needs to be put on the plate
<Commander> Perfect, thanks!

Initial Object State:
"Bread_3": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Knife_4": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"SaltShaker_6": {"label": "SaltShaker", "holding": False, "supported_by": ["Sink"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["Stool"]}
"Bread_13": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"SaltShaker_15": {"label": "SaltShaker", "holding": False, "supported_by": ["Fridge"]}
"Knife_17": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Knife_21": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"CounterTop_26": {"label": "CounterTop"}
"DiningTable_28": {"label": "DiningTable"}
"CounterTop_46": {"label": "CounterTop"}
"Fridge_55": {"label": "Fridge", "open": False}
"Plate_61": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["Chair"]}
"Potato_63": {"label": "Potato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Sink"]}
"Knife_66": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"SinkBasin_67": {"label": "SinkBasin"}
"SaltShaker_68": {"label": "SaltShaker", "holding": False, "supported_by": ["Stool"]}
"Knife_72": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Bread_77": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"Toaster_79": {"label": "Toaster", "toggled": True}
"Faucet_89": {"label": "Faucet", "toggled": False}

Demonstration Script:
```python
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_bread.pickup_and_place(target_countertop)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_potato = InteractionObject("Potato", object_instance = "Potato")
target_potato.go_to()
target_potato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_breadsliced = InteractionObject("BreadSliced", object_instance = "BreadSliced")
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_breadsliced.pickup_and_place(target_plate)
target_saltshaker = InteractionObject("SaltShaker", object_instance = "SaltShaker")
target_saltshaker.pickup()
target_diningtable = InteractionObject("DiningTable", object_instance = "DiningTable")
target_diningtable.go_to()
target_saltshaker.place(target_diningtable)
target_breadsliced.pickup_and_place(target_plate)
target_plate.pickup()
target_countertop.go_to()
target_plate.place(target_countertop)
target_breadsliced.pickup_and_place(target_countertop)
target_potato.pickup()
target_countertop.go_to()
target_potato.place(target_countertop)
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_plate.pickup_and_place(target_sinkbasin)
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_countertop.go_to()
target_breadsliced.place(target_countertop)
```