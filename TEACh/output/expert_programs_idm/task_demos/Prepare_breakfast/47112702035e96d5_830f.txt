Dialogue Instruction:
<Driver> what do i do today
<Commander> Please prepare breakfast
<Commander> Please prepare coffee
<Commander> Mug is in bin between sink and fridge
<Driver> where is the mug
<Commander> We need to make a salad
<Commander> Please slice lettuce which is in microwave
<Driver> yes
<Commander> Knife is on table left to you
<Commander> Slice tomato
<Driver> next
<Commander> Cook potato
<Commander> Slice potato and cook one slice
<Commander> potato is near sink
<Driver> it is sliced
<Commander> Cook 1 slice in microwave
<Driver> cooked
<Commander> Place all on plate
<Driver> so how many slices of each item
<Commander> Now we need to place the plate beside stove
<Driver> placed
<Commander> Done

Initial Object State:
"Mug_0": {"label": "Mug", "holding": False, "dirty": False, "filled": False, "fillLiquid": None, "supported_by": ["Floor", "GarbageCan"]}
"Lettuce_3": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Fridge"]}
"Plate_5": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Stool"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"CounterTop_9": {"label": "CounterTop"}
"CounterTop_17": {"label": "CounterTop"}
"Knife_30": {"label": "Knife", "holding": False, "supported_by": ["DiningTable"]}
"Plate_38": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["DiningTable"]}
"CoffeeMachine_50": {"label": "CoffeeMachine", "toggled": False}
"Lettuce_52": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Microwave"]}
"Knife_58": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Microwave_59": {"label": "Microwave", "toggled": False, "open": False}
"Mug_63": {"label": "Mug", "holding": False, "dirty": False, "filled": True, "fillLiquid": "water", "supported_by": ["DiningTable"]}
"DiningTable_67": {"label": "DiningTable"}

Demonstration Script:
```python
target_mug = InteractionObject("Mug", object_instance = "Mug")
target_mug.go_to()
target_mug.pickup()
target_coffeemachine = InteractionObject("CoffeeMachine", object_instance = "CoffeeMachine")
target_coffeemachine.go_to()
target_coffeemachine.toggle_off()
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_countertop.go_to()
target_mug.place(target_countertop)
target_mug.pickup_and_place(target_countertop)
target_coffeemachine.toggle_on()
target_coffeemachine.go_to()
target_coffeemachine.toggle_off()
target_mug.pickup_and_place(target_coffeemachine)
target_mug.pickup()
target_coffeemachine.go_to()
target_mug.place(target_coffeemachine)
target_mug.go_to()
target_mug.pickup()
target_microwave = InteractionObject("Microwave", object_instance = "Microwave")
target_microwave.go_to()
target_microwave.open()
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_diningtable = InteractionObject("DiningTable", object_instance = "DiningTable")
target_lettuce.pickup_and_place(target_diningtable)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_lettuce.go_to()
target_lettuce.slice()
target_diningtable.go_to()
target_knife.place(target_diningtable)
target_knife.pickup_and_place(target_countertop)
target_knife.pickup()
target_countertop.go_to()
target_knife.place(target_countertop)
target_microwave.go_to()
target_microwave.open()
target_microwave.go_to()
target_microwave.close()
target_microwave.go_to()
target_microwave.toggle_off()
target_microwave.go_to()
target_microwave.open()
target_microwave.go_to()
target_microwave.close()
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = "TomatoSliced")
target_tomatosliced.pickup_and_place(target_diningtable)
target_lettucesliced = InteractionObject("LettuceSliced", object_instance = None, parent_object = "Lettuce") # Initialize new sliced object from sliced parent
target_lettucesliced.pickup()
target_diningtable.go_to()
target_lettucesliced.place(target_diningtable)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup_and_place(target_countertop)
```