Dialogue Instruction:
<Commander> Today could you make me a sandwich
<Commander> First could you slice two slices of bread which is next to the sink and toast them
<Commander> there is a knife also by the sink
<Commander> Once they are toasted there is a lettuce in the fridge which I would like to be cut also
<Commander> You can place the pieces of the sandwich on the plate that is to the right of the toaster, it might have something on and possibly needs to be cleaned
<Commander> The final piece of the sandwich is a slice of tomato, I think there should be one in the fridge
<Driver> Is that it?
<Commander> Is there tomato on the plate too?
<Commander> if not there is one in the fridge
<Driver> oh I missed the tomato
<Driver> sliced?
<Commander> could you find it and slice it for me and place it with the bread
<Commander> Perfect! Thank you

Initial Object State:
"Bowl_0": {"label": "Bowl", "holding": False, "dirty": False, "filled": True, "fillLiquid": "water", "supported_by": ["Cabinet"]}
"Bread_2": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Lettuce_5": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Fridge"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Plate_8": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["CounterTop"]}
"Tomato_9": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Apple_12": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["Cabinet"]}
"Apple_13": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["Floor", "GarbageCan"]}
"Bowl_14": {"label": "Bowl", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["Cabinet"]}
"Knife_15": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Plate_16": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["Cabinet"]}
"CounterTop_23": {"label": "CounterTop"}
"Apple_41": {"label": "Apple", "holding": False, "sliced": False, "dirty": False, "cooked": False, "supported_by": ["CounterTop"]}
"Fridge_42": {"label": "Fridge", "open": False}
"SoapBottle_52": {"label": "SoapBottle", "holding": False, "supported_by": ["Plate", "CounterTop"]}
"Tomato_54": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Plate_57": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["CounterTop"]}
"Toaster_59": {"label": "Toaster", "toggled": True}
"Knife_61": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"SinkBasin_64": {"label": "SinkBasin"}
"Knife_65": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Lettuce_67": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Fridge"]}
"Bread_71": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Faucet_74": {"label": "Faucet", "toggled": True}
"Bowl_75": {"label": "Bowl", "holding": False, "dirty": False, "filled": False, "fillLiquid": None, "supported_by": ["Fridge"]}

Demonstration Script:
```python
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_bread.go_to()
target_bread.slice()
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_countertop.go_to()
target_knife.place(target_countertop)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_breadsliced.pickup_and_place(target_toaster)
target_laundryhamperlid = InteractionObject("LaundryHamperLid", object_instance = "LaundryHamperLid")
target_laundryhamperlid.toggle_on()
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.go_to()
target_breadsliced.place(target_plate)
target_bowl = InteractionObject("Bowl", object_instance = "Bowl")
target_breadsliced.pickup_and_place(target_bowl)
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.open()
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_lettuce.go_to()
target_lettuce.pickup()
target_fridge.go_to()
target_fridge.close()
target_countertop.go_to()
target_lettuce.place(target_countertop)
target_knife.pickup_and_place(target_countertop)
target_soapbottle = InteractionObject("SoapBottle", object_instance = "SoapBottle")
target_soapbottle.pickup()
target_countertop.go_to()
target_soapbottle.place(target_countertop)
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_plate.pickup_and_place(target_sinkbasin)
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_breadsliced.pickup_and_place(target_plate)
target_lettucesliced = InteractionObject("LettuceSliced", object_instance = "LettuceSliced")
target_lettucesliced.pickup()
target_countertop.go_to()
target_lettucesliced.place(target_countertop)
target_fridge.go_to()
target_fridge.open()
target_apple = InteractionObject("Apple", object_instance = "Apple")
target_apple.pickup_and_place(target_countertop)
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.pickup()
target_fridge.go_to()
target_fridge.close()
target_countertop.go_to()
target_tomato.place(target_countertop)
target_knife.pickup_and_place(target_countertop)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = "TomatoSliced")
target_tomatosliced.pickup()
target_bowl.go_to()
target_tomatosliced.place(target_bowl)
```