Dialogue Instruction:
<Driver> What should I do today?
<Commander> let's make sandwich
<Driver> Ok. What should I get first?
<Commander> slice bread
<Driver> Where can I find a knife?
<Commander> two slices of bread need to be toasted
<Driver> I have sliced the bread. What should I do next?
<Commander> slice lettuce
<Driver> Where is the lettuce?
<Driver> Ok. The lettuce is sliced.
<Commander> place one lettuce slice and 2 bread slices on a plate
<Commander> good job
<Commander> done

Initial Object State:
"Knife_2": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Egg_4": {"label": "Egg", "holding": False, "supported_by": ["Plate", "CounterTop"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Plate_9": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["CounterTop"]}
"Bread_10": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Knife_13": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Egg_14": {"label": "Egg", "holding": False, "supported_by": ["Floor", "GarbageCan"]}
"Knife_15": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"CounterTop_39": {"label": "CounterTop"}
"CounterTop_40": {"label": "CounterTop"}
"CounterTop_46": {"label": "CounterTop"}
"Bread_59": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Plate_60": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Stool"]}
"Lettuce_64": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Fridge"]}
"Toaster_65": {"label": "Toaster", "toggled": True}
"Tomato_68": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Knife_71": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Fridge_73": {"label": "Fridge", "open": False}
"Egg_77": {"label": "Egg", "holding": False, "supported_by": ["Microwave"]}
"Knife_79": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}

Demonstration Script:
```python
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.go_to()
target_knife.pickup()
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_bread.go_to()
target_bread.slice()
target_diningtable = InteractionObject("DiningTable", object_instance = "DiningTable")
target_diningtable.go_to()
target_knife.place(target_diningtable)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_breadsliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_diningtable.go_to()
target_breadsliced.place(target_diningtable)
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_plate.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_breadsliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_breadsliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_bread.pickup_and_place(target_countertop)
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.open()
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_lettuce.pickup_and_place(target_countertop)
target_knife.pickup()
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.go_to()
target_tomato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_egg = InteractionObject("Egg", object_instance = "Egg")
target_egg.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_lettucesliced = InteractionObject("LettuceSliced", object_instance = "LettuceSliced")
target_lettucesliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
```