Dialogue Instruction:
<Driver> what shall I do today?
<Commander> we making a sandwich
<Commander> grab a bread
<Driver> ingredients please
<Driver> where is the bread?
<Commander> at the counter next to fridge
<Commander> next take the knife next to the toaster
<Commander> slice the bread
<Driver> next?
<Commander> toast 2 slices one at a time
<Driver> next?
<Commander> slice the lettuce next to the microwave
<Driver> next?
<Commander> go near the cupboard near the fridge
<Commander> open the first drawer on your left from up
<Driver> next
<Commander> close that drawer and look inside the first pot for a tomato
<Commander> the pot on the cupboard
<Commander> tomato
<Driver> there is no tomato inside it
<Commander> did you find the tomato
<Commander> okay let me search again
<Commander> look for the coffee machine
<Commander> slice it
<Driver> next?
<Commander> put all components on a plate
<Driver> where is the plate?
<Commander> near the toaster
<Commander> clear the plate and clean it
<Commander> it has the salt shaker
<Driver> next?
<Commander> good job
<Commander> I will finish
<Driver> thanks

Initial Object State:
"Plate_2": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["CounterTop"]}
"Tomato_3": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Stool"]}
"Lettuce_5": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["CounterTop"]}
"Pot_8": {"label": "Pot", "holding": False, "dirty": False, "filled": True, "fillLiquid": "water", "supported_by": ["SideTable"]}
"Bread_9": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["SideTable"]}
"Bread_11": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Pot_12": {"label": "Pot", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["Cabinet"]}
"Cabinet_16": {"label": "Cabinet", "open": False}
"Cabinet_18": {"label": "Cabinet", "open": False}
"Cabinet_19": {"label": "Cabinet", "open": False}
"CounterTop_20": {"label": "CounterTop"}
"Cabinet_21": {"label": "Cabinet", "open": False}
"Faucet_22": {"label": "Faucet", "toggled": True}
"Bread_28": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Pot_29": {"label": "Pot", "holding": False, "dirty": True, "filled": False, "fillLiquid": None, "supported_by": ["SideTable"]}
"Knife_30": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Bowl_31": {"label": "Bowl", "holding": False, "dirty": False, "filled": False, "fillLiquid": None, "supported_by": ["CounterTop"]}
"Lettuce_49": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Microwave"]}
"Tomato_53": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Drawer"]}
"Knife_55": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Plate_56": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["CounterTop"]}
"Toaster_58": {"label": "Toaster", "toggled": False}
"Stool_71": {"label": "Stool"}

Demonstration Script:
```python
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_bread.pickup_and_place(target_countertop)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_bread.go_to()
target_bread.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_toaster.go_to()
target_knife.place(target_toaster)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_breadsliced.pickup_and_place(target_toaster)
target_toaster.toggle_on()
target_toaster.go_to()
target_toaster.toggle_off()
target_breadsliced.pickup_and_place(target_toaster)
target_breadsliced.pickup()
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_toaster.go_to()
target_toaster.toggle_on()
target_toaster.go_to()
target_toaster.toggle_off()
target_breadsliced.pickup_and_place(target_countertop)
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_lettuce.pickup()
target_countertop.go_to()
target_lettuce.place(target_countertop)
target_knife.go_to()
target_knife.pickup()
target_lettuce.go_to()
target_lettuce.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_cabinet.open()
target_pot = InteractionObject("Pot", object_instance = "Pot")
target_pot.pickup_and_place(target_countertop)
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.pickup()
target_countertop.go_to()
target_tomato.place(target_countertop)
target_knife.go_to()
target_knife.pickup()
target_tomato.go_to()
target_tomato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_countertop.go_to()
target_knife.place(target_countertop)
target_stool = InteractionObject("Stool", object_instance = "Stool")
target_stool.go_to()
target_stool.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup_and_place(target_countertop)
target_bowl = InteractionObject("Bowl", object_instance = "Bowl")
target_bowl.pickup()
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.go_to()
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_countertop.go_to()
target_breadsliced.place(target_countertop)
target_countertop.go_to()
target_breadsliced.place(target_countertop)
target_breadsliced.pickup_and_place(target_countertop)
target_bowl.pickup()
target_countertop.go_to()
target_bowl.place(target_countertop)
```