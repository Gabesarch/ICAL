Dialogue Instruction:
<Commander> make toast
<Commander> knife in fridge
<Commander> 
<Driver> 
<Commander> 
<Commander> 
<Commander> 
<Driver> 
<Commander> bread is on table
<Commander> two slices
<Driver> what else shall i do?
<Commander> toast the two slices of bread
<Commander> slice a tomato
<Commander> tomato on table
<Commander> put toast and tomato on plate
<Commander> plate is on stool
<Driver> Where is the plate please
<Commander> bread has to be toasted
<Commander> good now toast and tomato on plate
<Commander> good finished

Initial Object State:
"Bread_4": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Chair"]}
"Knife_7": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Plate_8": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Stool"]}
"Tomato_11": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"Tomato_15": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"CounterTop_21": {"label": "CounterTop"}
"DiningTable_23": {"label": "DiningTable"}
"CounterTop_41": {"label": "CounterTop"}
"Tomato_43": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"Fridge_50": {"label": "Fridge", "open": False}
"Plate_56": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["Stool"]}
"Knife_61": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Knife_67": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Bread_72": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["DiningTable"]}
"Toaster_74": {"label": "Toaster", "toggled": False}

Demonstration Script:
```python
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_bread.pickup_and_place(target_countertop)
target_bread.pickup()
target_countertop.go_to()
target_bread.place(target_countertop)
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup_and_place(target_countertop)
target_knife.pickup()
target_diningtable = InteractionObject("DiningTable", object_instance = "DiningTable")
target_diningtable.go_to()
target_knife.place(target_diningtable)
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.pickup_and_place(target_diningtable)
target_knife.pickup()
target_tomato.go_to()
target_tomato.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup_and_place(target_countertop)
target_breadsliced = InteractionObject("BreadSliced", object_instance = "BreadSliced")
target_breadsliced.pickup()
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_breadsliced.pickup_and_place(target_toaster)
target_breadsliced.pickup()
target_countertop.go_to()
target_breadsliced.place(target_countertop)
target_breadsliced.pickup_and_place(target_toaster)
target_toaster.toggle_on()
target_toaster.go_to()
target_toaster.toggle_off()
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_toaster.go_to()
target_toaster.toggle_on()
target_toaster.go_to()
target_toaster.toggle_off()
target_breadsliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_breadsliced.pickup_and_place(target_countertop)
target_plate.pickup()
target_diningtable.go_to()
target_plate.place(target_diningtable)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = None, parent_object = "Tomato") # Initialize new sliced object from sliced parent
target_tomatosliced.pickup_and_place(target_plate)
target_tomatosliced.pickup()
target_diningtable.go_to()
target_tomatosliced.place(target_diningtable)
```