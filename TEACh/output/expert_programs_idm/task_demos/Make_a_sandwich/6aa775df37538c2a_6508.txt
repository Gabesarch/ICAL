Dialogue Instruction:
<Driver> What should I do today?
<Commander> hi
<Commander> today we make sandwich
<Driver> ok. What should I do first?
<Commander> slice a bread using a knife
<Driver> Ok the bread is sliced.
<Driver> What should I do next?
<Commander> 2 slices of bread need to be toasted
<Driver> Ok. I have toasted the bread.
<Commander> make a slice of tomato
<Driver> I have sliced the tomato. Anything else?
<Commander> 2 slices of toast and slice of tomato on a clean plate
<Driver> Where is a plate?
<Commander> plate is next to the sink
<Driver> Anything else?
<Commander> done
<Commander> thank you
<Driver> Thanks.
<Driver> 

Initial Object State:
"Knife_2": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Knife_9": {"label": "Knife", "holding": False, "supported_by": ["Stool"]}
"Bread_10": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Knife_11": {"label": "Knife", "holding": False, "supported_by": ["Drawer"]}
"Cabinet_13": {"label": "Cabinet", "open": False}
"Cabinet_16": {"label": "Cabinet", "open": False}
"CounterTop_17": {"label": "CounterTop"}
"CounterTop_18": {"label": "CounterTop"}
"Cabinet_25": {"label": "Cabinet", "open": False}
"Cabinet_26": {"label": "Cabinet", "open": False}
"Cabinet_27": {"label": "Cabinet", "open": False}
"Cabinet_28": {"label": "Cabinet", "open": False}
"Cabinet_29": {"label": "Cabinet", "open": False}
"Cabinet_32": {"label": "Cabinet", "open": False}
"CounterTop_33": {"label": "CounterTop"}
"Cabinet_34": {"label": "Cabinet", "open": False}
"Cabinet_35": {"label": "Cabinet", "open": False}
"Bread_36": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Knife_37": {"label": "Knife", "holding": False, "supported_by": ["DiningTable"]}
"Toaster_38": {"label": "Toaster", "toggled": True}
"Bowl_40": {"label": "Bowl", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["CounterTop"]}
"Tomato_43": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Stool"]}
"Plate_45": {"label": "Plate", "holding": False, "dirty": False, "supported_by": ["CounterTop"]}
"SaltShaker_56": {"label": "SaltShaker", "holding": False, "supported_by": ["Floor", "GarbageCan"]}
"Knife_60": {"label": "Knife", "holding": False, "supported_by": ["DiningTable"]}

Demonstration Script:
```python
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_bread.pickup_and_place(target_countertop)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_bread.go_to()
target_bread.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.pickup_and_place(target_countertop)
target_knife.pickup()
target_countertop.go_to()
target_knife.place(target_countertop)
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_cabinet.open()
target_cabinet.go_to()
target_cabinet.close()
target_cabinet.go_to()
target_cabinet.close()
target_cabinet.go_to()
target_cabinet.open()
target_saltshaker = InteractionObject("SaltShaker", object_instance = "SaltShaker")
target_saltshaker.pickup_and_place(target_countertop)
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup()
target_countertop.go_to()
target_plate.place(target_countertop)
target_breadsliced.pickup_and_place(target_countertop)
target_bowl = InteractionObject("Bowl", object_instance = "Bowl")
target_breadsliced.place(target_bowl)
target_breadsliced.pickup_and_place(target_plate)
```