Dialogue Instruction:
<Driver> Hi! What can I do for you?
<Commander> make a sandwich
<Commander> make 2 slices of toast
<Driver> Where is the bread?
<Commander> bread is on the right side of the cooker
<Driver> never mind
<Commander> slice it with knife
<Driver> where is knife
<Commander> cabinet on the top left of the cooker
<Commander> got it
<Commander> top left of the cooker
<Commander> look up
<Commander> toast the bread
<Commander> toast the bread
<Driver> done
<Commander> 2 slices right
<Driver> Yes.
<Commander> ok then make 1 slice of tomato
<Driver> What next?
<Driver> Got it.
<Commander> 1 slice of tomato
<Driver> Where is tomato
<Commander> slice it with a knife
<Commander> tomato is in the sink
<Commander> slice it with a knife
<Driver> done
<Driver> Next?
<Commander> knife is in the top cabinet on the left of the cooker
<Commander> ok
<Commander> clean the plate
<Driver> Sure. Where is the plate?
<Commander> the plate is dirty
<Commander> rinse it with water in the sink
<Driver> No problem. Where can I find the plate?
<Commander> plate is on your right
<Driver> Sorry, I don't see the plate.
<Commander> check the cabinet on the bottom left of the cooker
<Commander> it's there
<Commander> good
<Driver> Got it.
<Commander> now rinse in the sink
<Driver> done
<Driver> Anything else?
<Driver> Are we finished?
<Commander> all sandwich components on the plate now
<Commander> please
<Commander> place them on the plate
<Driver> Tomato sandwich is done.
<Commander> the toasted bread and the tomato
<Commander> the 2 pieces
<Driver> Yes
<Commander> everything is in
<Commander> right
<Driver> 2 pieces of bread and a slice of tomato
<Commander> if so your job is done
<Commander> thanks
<Driver> YOu are welcome!

Initial Object State:
"Knife_3": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Bowl_5": {"label": "Bowl", "holding": False, "dirty": True, "filled": False, "fillLiquid": None, "supported_by": ["CounterTop"]}
"Spatula_8": {"label": "Spatula", "holding": False, "dirty": False, "supported_by": ["Sink"]}
"Bread_17": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["CounterTop"]}
"Bowl_18": {"label": "Bowl", "holding": False, "dirty": True, "filled": True, "fillLiquid": "water", "supported_by": ["Fridge"]}
"Knife_20": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Spatula_21": {"label": "Spatula", "holding": False, "dirty": False, "supported_by": ["Cabinet"]}
"CounterTop_33": {"label": "CounterTop"}
"Cabinet_34": {"label": "Cabinet", "open": False}
"CounterTop_35": {"label": "CounterTop"}
"Cabinet_39": {"label": "Cabinet", "open": False}
"Cabinet_46": {"label": "Cabinet", "open": False}
"Cabinet_48": {"label": "Cabinet", "open": False}
"Cabinet_49": {"label": "Cabinet", "open": False}
"Cabinet_50": {"label": "Cabinet", "open": False}
"Cabinet_51": {"label": "Cabinet", "open": False}
"Cabinet_54": {"label": "Cabinet", "open": False}
"Cabinet_57": {"label": "Cabinet", "open": False}
"CounterTop_58": {"label": "CounterTop"}
"Knife_60": {"label": "Knife", "holding": False, "supported_by": ["Cabinet"]}
"Bread_62": {"label": "Bread", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Fridge"]}
"Toaster_67": {"label": "Toaster", "toggled": True}
"Plate_72": {"label": "Plate", "holding": False, "dirty": True, "supported_by": ["Cabinet"]}
"Tomato_73": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Sink"]}
"Spatula_80": {"label": "Spatula", "holding": False, "dirty": False, "supported_by": ["Fridge"]}
"Bowl_87": {"label": "Bowl", "holding": False, "dirty": False, "filled": True, "fillLiquid": "water", "supported_by": ["Sink"]}
"SinkBasin_88": {"label": "SinkBasin"}
"Knife_92": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Faucet_102": {"label": "Faucet", "toggled": True}

Demonstration Script:
```python
target_bread = InteractionObject("Bread", object_instance = "Bread")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_bread.pickup_and_place(target_countertop)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_bread.go_to()
target_bread.slice()
target_countertop.go_to()
target_knife.place(target_countertop)
target_breadsliced = InteractionObject("BreadSliced", object_instance = None, parent_object = "Bread") # Initialize new sliced object from sliced parent
target_toaster = InteractionObject("Toaster", object_instance = "Toaster")
target_breadsliced.pickup_and_place(target_toaster)
target_breadsliced.pickup()
target_toaster.go_to()
target_breadsliced.place(target_toaster)
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_countertop.go_to()
target_breadsliced.place(target_countertop)
target_breadsliced.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_countertop.go_to()
target_breadsliced.place(target_countertop)
target_spatula = InteractionObject("Spatula", object_instance = "Spatula")
target_spatula.go_to()
target_spatula.pickup()
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.go_to()
target_tomato.slice()
target_knife.pickup_and_place(target_countertop)
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.toggle_off()
target_faucet.go_to()
target_faucet.toggle_off()
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.go_to()
target_cabinet.open()
target_plate = InteractionObject("Plate", object_instance = "Plate")
target_plate.pickup_and_place(target_plate)
target_bowl = InteractionObject("Bowl", object_instance = "Bowl")
target_bowl.pickup()
target_countertop.go_to()
target_bowl.place(target_countertop)
target_plate.pickup_and_place(target_plate)
target_faucet.toggle_off()
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_plate.pickup_and_place(target_sinkbasin)
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_plate.pickup_and_place(target_countertop)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_tomatosliced = InteractionObject("TomatoSliced", object_instance = None, parent_object = "Tomato") # Initialize new sliced object from sliced parent
target_tomatosliced.pickup_and_place(target_plate)
target_breadsliced.pickup()
target_plate.go_to()
target_breadsliced.place(target_plate)
target_tomatosliced.go_to()
target_tomatosliced.pickup()
```