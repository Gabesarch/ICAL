Dialogue Instruction:
<Driver> What shall I do today?
<Commander> hello
<Commander> so there's a tomato under the counter counter
<Commander> might be hard to find it
<Commander> but you need to put it in the cabinet
<Driver> Which cabinet?
<Commander> doesn't say it
<Commander> i think it can be any cabinet
<Driver> Done
<Commander> did not work
<Driver> What's the exact task?
<Commander> please try the bottom cabinet left to the stove
<Commander> the other one
<Commander> open the other one
<Commander> to the left
<Commander> done

Initial Object State:
"Tomato_7": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Floor", "Shelf"]}
"Cabinet_15": {"label": "Cabinet", "open": False}
"CounterTop_20": {"label": "CounterTop"}
"Cabinet_21": {"label": "Cabinet", "open": False}
"Cabinet_22": {"label": "Cabinet", "open": False}
"Cabinet_23": {"label": "Cabinet", "open": False}
"Cabinet_24": {"label": "Cabinet", "open": False}
"Cabinet_25": {"label": "Cabinet", "open": False}
"Cabinet_26": {"label": "Cabinet", "open": False}
"Cabinet_27": {"label": "Cabinet", "open": False}
"Cabinet_28": {"label": "Cabinet", "open": False}
"Cabinet_31": {"label": "Cabinet", "open": False}
"Tomato_48": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}

Demonstration Script:
```python
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_tomato.pickup_and_place(target_countertop)
target_cabinet = InteractionObject("Cabinet", object_instance = "Cabinet")
target_cabinet.close()
target_cabinet.go_to()
target_cabinet.open()
target_tomato.pickup_and_place(target_countertop)
target_cabinet.open()
target_tomato.go_to()
target_tomato.pickup()
target_cabinet.go_to()
target_cabinet.close()
target_countertop.go_to()
target_tomato.place(target_countertop)
target_tomato.go_to()
target_tomato.pickup()
target_cabinet.go_to()
target_cabinet.close()
target_countertop.go_to()
target_tomato.place(target_countertop)
```