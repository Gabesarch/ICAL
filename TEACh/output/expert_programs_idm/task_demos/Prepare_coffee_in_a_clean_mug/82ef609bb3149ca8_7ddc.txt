Dialogue Instruction:
<Driver> what should i do today?
<Commander> grab the dirty mug out of the fridge
<Commander> go wash in the sink
<Commander> you might have to clear the sink
<Commander> looking great
<Commander> place in sink and turn on water
<Commander> after cleaning take to coffee maker
<Commander> place mug in coffee maker
<Commander> finish good job
<Driver> placed coffee mug
<Driver> thank you

Initial Object State:
"Mug_1": {"label": "Mug", "holding": False, "dirty": False, "filled": True, "fillLiquid": "water", "supported_by": ["Fridge"]}
"Knife_3": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Egg_5": {"label": "Egg", "holding": False, "supported_by": ["Sink"]}
"Knife_9": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Tomato_10": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Cabinet"]}
"Lettuce_12": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["CounterTop"]}
"SoapBottle_14": {"label": "SoapBottle", "holding": False, "supported_by": ["Fridge"]}
"Fork_19": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["Cabinet"]}
"Fork_21": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["Cabinet"]}
"SoapBottle_22": {"label": "SoapBottle", "holding": False, "supported_by": ["Fridge"]}
"Lettuce_23": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["CounterTop"]}
"Mug_24": {"label": "Mug", "holding": False, "dirty": True, "filled": False, "fillLiquid": None, "supported_by": ["CounterTop"]}
"Mug_26": {"label": "Mug", "holding": False, "dirty": True, "filled": False, "fillLiquid": None, "supported_by": ["Cabinet"]}
"Knife_27": {"label": "Knife", "holding": False, "supported_by": ["Sink"]}
"Fork_28": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["CounterTop"]}
"Fork_33": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["CounterTop", "Microwave"]}
"Egg_34": {"label": "Egg", "holding": False, "supported_by": ["Cabinet"]}
"Lettuce_39": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Cabinet"]}
"Knife_40": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Egg_41": {"label": "Egg", "holding": False, "supported_by": ["CounterTop", "Pan"]}
"Knife_42": {"label": "Knife", "holding": False, "supported_by": ["Fridge"]}
"Lettuce_44": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Cabinet"]}
"Knife_45": {"label": "Knife", "holding": False, "supported_by": ["Drawer"]}
"Egg_46": {"label": "Egg", "holding": False, "supported_by": ["Mug", "Cabinet"]}
"Knife_49": {"label": "Knife", "holding": False, "supported_by": ["CounterTop", "Microwave"]}
"Fork_52": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["Sink"]}
"SoapBottle_55": {"label": "SoapBottle", "holding": False, "supported_by": ["Cabinet"]}
"Lettuce_56": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Cabinet"]}
"Egg_59": {"label": "Egg", "holding": False, "supported_by": ["Cabinet"]}
"Fork_61": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["Fridge"]}
"CounterTop_84": {"label": "CounterTop"}
"CounterTop_85": {"label": "CounterTop"}
"CounterTop_91": {"label": "CounterTop"}
"CoffeeMachine_96": {"label": "CoffeeMachine", "toggled": True}
"Fork_101": {"label": "Fork", "holding": False, "dirty": False, "supported_by": ["Drawer"]}
"SoapBottle_106": {"label": "SoapBottle", "holding": False, "supported_by": ["Sink"]}
"Lettuce_109": {"label": "Lettuce", "holding": False, "sliced": False, "supported_by": ["Sink"]}
"SinkBasin_111": {"label": "SinkBasin"}
"Tomato_113": {"label": "Tomato", "holding": False, "sliced": False, "cooked": False, "supported_by": ["Sink"]}
"Knife_116": {"label": "Knife", "holding": False, "supported_by": ["CounterTop"]}
"Fridge_118": {"label": "Fridge", "open": False}
"Egg_122": {"label": "Egg", "holding": False, "supported_by": ["CounterTop", "Pan"]}
"Knife_124": {"label": "Knife", "holding": False, "supported_by": ["Drawer"]}
"Mug_126": {"label": "Mug", "holding": False, "dirty": False, "filled": False, "fillLiquid": None, "supported_by": ["Stool"]}
"Faucet_129": {"label": "Faucet", "toggled": False}

Demonstration Script:
```python
target_fridge = InteractionObject("Fridge", object_instance = "Fridge")
target_fridge.go_to()
target_fridge.open()
target_mug = InteractionObject("Mug", object_instance = "Mug")
target_mug.go_to()
target_mug.pickup()
target_fridge.go_to()
target_fridge.close()
target_countertop = InteractionObject("CounterTop", object_instance = "CounterTop")
target_countertop.go_to()
target_mug.place(target_countertop)
target_lettuce = InteractionObject("Lettuce", object_instance = "Lettuce")
target_lettuce.pickup_and_place(target_countertop)
target_knife = InteractionObject("Knife", object_instance = "Knife")
target_knife.pickup()
target_countertop.go_to()
target_knife.place(target_countertop)
target_egg = InteractionObject("Egg", object_instance = "Egg")
target_egg.pickup_and_place(target_countertop)
target_knife.pickup()
target_countertop.go_to()
target_knife.place(target_countertop)
target_soapbottle = InteractionObject("SoapBottle", object_instance = "SoapBottle")
target_soapbottle.pickup_and_place(target_countertop)
target_fork = InteractionObject("Fork", object_instance = "Fork")
target_fork.pickup()
target_countertop.go_to()
target_fork.place(target_countertop)
target_tomato = InteractionObject("Tomato", object_instance = "Tomato")
target_tomato.pickup_and_place(target_countertop)
target_mug.pickup()
target_sinkbasin = InteractionObject("SinkBasin", object_instance = "SinkBasin")
target_sinkbasin.go_to()
target_mug.place(target_sinkbasin)
target_mug.go_to()
target_mug.pickup()
target_sinkbasin.go_to()
target_mug.pour(target_sinkbasin)
target_countertop.go_to()
target_mug.place(target_countertop)
target_faucet = InteractionObject("Faucet", object_instance = "Faucet")
target_faucet.go_to()
target_faucet.toggle_on()
target_faucet.go_to()
target_faucet.toggle_off()
target_mug.go_to()
target_mug.pickup()
target_sinkbasin.go_to()
target_mug.pour(target_sinkbasin)
target_coffeemachine = InteractionObject("CoffeeMachine", object_instance = "CoffeeMachine")
target_coffeemachine.go_to()
target_mug.place(target_coffeemachine)
```