# Retrieve the knife from the microwave and turn off the microwave if it's on
microwave = InteractionObject("Microwave", object_instance="Microwave_101")
microwave.go_to()
if microwave.check_attribute("toggled", True):
    microwave.toggle_off()
knife = InteractionObject("Knife", object_instance="Knife_82")
knife.go_to()
knife.pickup()

# Retrieve the tomato from the cabinet above the fridge, slice it, and create instances for the sliced tomatoes
cabinet_above_fridge = InteractionObject("Cabinet", object_instance="Cabinet_50")  # Assuming the tomato is in the last cabinet instance
cabinet_above_fridge.go_to()
cabinet_above_fridge.open()
tomato = InteractionObject("Tomato", object_instance="Tomato_99")
tomato.go_to()
tomato.pickup()
tomato.slice()
tomato_sliced_1 = InteractionObject("TomatoSliced", parent_object=tomato.object_instance)  # Initialize new sliced object from sliced parent
tomato_sliced_2 = InteractionObject("TomatoSliced", parent_object=tomato.object_instance)  # Initialize new sliced object from sliced parent

# Retrieve the potato from the island, slice it, and create an instance for the sliced potatoes
potato = InteractionObject("Potato", object_instance="Potato_69")
potato.go_to()
potato.pickup()
potato.slice()
potato_sliced = InteractionObject("PotatoSliced", parent_object=potato.object_instance)  # Initialize new sliced object from sliced parent

# Cook one slice of potato in the microwave
microwave.go_to()
potato_sliced.pickup()
microwave.open()
potato_sliced.place(microwave)
microwave.toggle_on()
microwave.toggle_off()
microwave.open()
potato_sliced.pickup()  # Retrieve the now cooked potato slice
potato_sliced.change_state("cooked", True)  # Update the potato slice's state to cooked

# Clean the dirty plate next to the sink
sink = InteractionObject("SinkBasin", object_instance="SinkBasin_87")
faucet = InteractionObject("Faucet", object_instance="Faucet_104")
plate = InteractionObject("Plate", object_instance="Plate_66")  # Assuming the plate is the last instance
plate.go_to()
if plate.check_attribute("dirty", True):
    plate.pickup()
    sink.go_to()
    plate.place(sink)
    faucet.go_to()
    faucet.toggle_on()
    faucet.toggle_off()
    plate.pickup()  # Pick up the clean plate
    plate.change_state("dirty", False)  # Update the plate's state to clean

# Assemble the salad on the clean plate with one slice of cooked potato and two slices of tomato
plate.go_to()
potato_sliced.place(plate)
tomato_sliced_1.pickup()
tomato_sliced_1.place(plate)
tomato_sliced_2.pickup()
tomato_sliced_2.place(plate)
