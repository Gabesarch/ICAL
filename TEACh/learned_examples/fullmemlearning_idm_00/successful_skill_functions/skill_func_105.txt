# Define InteractionObject instances for the bread, toaster, plate, lettuce, knife, and faucet
toaster = InteractionObject("Toaster", object_instance="Toaster_53")  # Toaster is toggled on
bread = InteractionObject("Bread", object_instance="Bread_8")  # Bread is on the countertop
cabinet = InteractionObject("Cabinet", object_instance="Cabinet_20")  # Cabinet to the right of the microwave
plate = InteractionObject("Plate", object_instance="Plate_58")  # Dirty plate in the cabinet
lettuce = InteractionObject("Lettuce", object_instance="Lettuce_3")  # Lettuce on the countertop
sink = InteractionObject("SinkBasin", object_instance="SinkBasin_74")  # Sink for cleaning the plate
faucet = InteractionObject("Faucet", object_instance="Faucet_88")  # Faucet for cleaning the plate
knife = InteractionObject("Knife", object_instance="Knife_9")  # Knife on the stool

# Pick up a knife to slice the bread
knife.go_to()
knife.pickup()

# Slice the bread into two slices
bread.pickup()
bread.slice()
bread_sliced_1 = InteractionObject("BreadSliced", parent_object=bread.object_instance)  # Initialize new sliced object from sliced parent
bread_sliced_2 = InteractionObject("BreadSliced", parent_object=bread.object_instance)  # Initialize new sliced object from sliced parent

# Toast the first slice of bread
toaster.go_to()
bread_sliced_1.pickup()
bread_sliced_1.place(toaster)
toaster.toggle_on()  # Start toasting the first bread slice
# Wait for the bread to toast (this step is abstracted in the script)
toaster.toggle_off()  # Stop toasting after it's done
bread_sliced_1.change_state("cooked", True)  # Update the bread slice's state to toasted
bread_sliced_1.pickup()  # Remove the toasted bread slice from the toaster

# Toast the second slice of bread
bread_sliced_2.pickup()
bread_sliced_2.place(toaster)
toaster.toggle_on()  # Start toasting the second bread slice
# Wait for the bread to toast (this step is abstracted in the script)
toaster.toggle_off()  # Stop toasting after it's done
bread_sliced_2.change_state("cooked", True)  # Update the bread slice's state to toasted
bread_sliced_2.pickup()  # Remove the toasted bread slice from the toaster

# Clean the dirty plate
cabinet.go_to()
plate.pickup()
sink.go_to()
plate.place(sink)
faucet.go_to()
faucet.toggle_on()  # Turn on the faucet to clean the plate
faucet.toggle_off()  # Turn off the faucet after cleaning
plate.pickup()  # Pick up the clean plate
plate.change_state("dirty", False)  # Update the plate's state to clean

# Slice a piece of lettuce for the sandwich
lettuce.pickup()
lettuce.slice()
lettuce_sliced = InteractionObject("LettuceSliced", parent_object=lettuce.object_instance)  # Initialize new sliced object from sliced parent

# Assemble the sandwich with the toasted bread and lettuce slice on the clean plate
plate.go_to()
bread_sliced_1.place(plate)
bread_sliced_2.place(plate)
lettuce_sliced.pickup()
lettuce_sliced.place(plate)

# Causal abstraction comments:
# The knife is picked up to enable the slicing of the bread, as slicing requires holding a knife.
# The bread is sliced and toasted to create the base of the sandwich.
# The plate is cleaned to provide a hygienic surface for food preparation.
# The lettuce is sliced to add a fresh component to the sandwich.
# The sandwich components are assembled on the plate, completing the task as per the dialogue instructions.
