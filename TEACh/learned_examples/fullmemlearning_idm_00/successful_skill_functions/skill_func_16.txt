# Define InteractionObject instances for the pot, faucet, sink, and houseplant
clean_pot = InteractionObject("Pot", object_instance="Pot_97")  # Selecting the clean pot that is not dirty and is on the stove burner
faucet = InteractionObject("Faucet", object_instance="Faucet_104")
sink_basin = InteractionObject("SinkBasin", object_instance="SinkBasin_82")
houseplant = InteractionObject("HousePlant", object_instance="HousePlant_101")

# (causal abstraction) Check if the faucet is on; if it is, toggle it off to prevent water wastage
if faucet.check_attribute("toggled", True):
    faucet.go_to()
    faucet.toggle_off()

# (causal abstraction) Since the selected pot is already filled with water, we can directly use it to water the plant
# Go to the pot and pick it up
clean_pot.go_to()
clean_pot.pickup()

# (causal abstraction) Navigate to the houseplant and pour water from the pot to water it
houseplant.go_to()
clean_pot.pour(houseplant)

# (causal abstraction) After pouring, the pot is no longer filled with water, so update its state
clean_pot.change_state("filled", False)
clean_pot.change_state("fillLiquid", None)

# (causal abstraction) Update the houseplant's state to reflect that it has been watered
houseplant.change_state("filled", True)
houseplant.change_state("fillLiquid", "water")
