# Define InteractionObject instances for the knife, bread, toaster, and plate
knife = InteractionObject("Knife", object_instance="Knife_7")  # Knife is on the countertop
bread = InteractionObject("Bread", object_instance="Bread_9")  # Bread is on the dining table
toaster = InteractionObject("Toaster", object_instance="Toaster_48")  # Toaster for toasting bread
plate = InteractionObject("Plate", object_instance="Plate_1")  # Clean plate is on the chair

# Pick up the knife and slice the bread
knife.go_to()
knife.pickup()
bread.go_to()
bread.slice()
bread_sliced = InteractionObject("BreadSliced", parent_object="Bread_9")  # Initialize new sliced object from sliced parent

# Toast the sliced bread
toaster.go_to()
bread_sliced.pickup()
bread_sliced.place(toaster)
toaster.toggle_on()  # Start toasting the bread slice
# Wait for the bread to toast (this step is abstracted in the script)
toaster.toggle_off()  # Stop toasting after it's done
bread_sliced.change_state("cooked", True)  # Update the bread slice's state to toasted

# Pick up the clean plate and place the toasted bread on it
plate.go_to()
plate.pickup()
bread_sliced.pickup()
bread_sliced.place(plate)

# Causal abstraction comments:
# The knife is picked up to slice the bread, which is necessary for making toast.
# The toaster is used to toast the bread slice, which is the main task of making a plate of toast.
# The clean plate is used to hold the toast, following the instruction to use a specific plate found on the chair.
